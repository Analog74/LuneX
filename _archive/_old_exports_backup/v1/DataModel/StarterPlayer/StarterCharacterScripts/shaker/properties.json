{
  "Attributes": "<unsupported: Attributes(Attributes { data: {} })>",
  "Capabilities": "<unsupported: SecurityCapabilities(SecurityCapabilities { value: 0 })>",
  "Disabled": true,
  "HistoryId": "<unsupported: UniqueId(UniqueId { index: 0, time: 0, random: 0 })>",
  "LinkedSource": "<unsupported: ContentId(ContentId { url: \"\" })>",
  "RunContext": "<unsupported: Enum(Enum { value: 0 })>",
  "Sandboxed": false,
  "ScriptGuid": "{FEF3D61D-AE30-47A2-BAB8-D1DD776B5B06}",
  "Source": "local camera = workspace.CurrentCamera\n\nlocal vr = script.e\nlocal CameraShaker = require(game.ReplicatedStorage.CameraShaker)\nlocal function ShakeCamera(shakeCf)\n\tcamera.CFrame = camera.CFrame * shakeCf\nend\nlocal renderPriority = Enum.RenderPriority.Camera.Value + 1\nlocal camShake = CameraShaker.new(renderPriority, ShakeCamera)\ncamShake:Start()\nwhile (true) do\n\tlocal ef = math.random(1,3)\n\tvr.Value=ef\n\tif vr.Value == 1 then\n\tcamShake:Shake(CameraShaker.Presets.Earthquake)\n\tend\n\tif vr.Value == 2 then\n\t\tcamShake:Shake(CameraShaker.Presets.Explosion)\n\tend\n\tif vr.Value == 3 then\n\t\tcamShake:Shake(CameraShaker.Presets.Vibration)\n\tend\n\tif vr.Value == 4 then\n\t\tcamShake:Shake(CameraShaker.Presets.Bump)\n\tend\n\tif vr.Value == 5 then\n\t\tcamShake:Shake(CameraShaker.Presets.HandheldCamera)\n\tend\n\t\twait(1)\n\t\n\tend ",
  "SourceAssetId": "<unsupported: Int64(-1)>",
  "Tags": "<unsupported: Tags(Tags { members: [] })>",
  "UniqueId": "<unsupported: UniqueId(UniqueId { index: 26669, time: 142155861, random: 1232354692393223026 })>"
}