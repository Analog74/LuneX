{
  "Attributes": "<unsupported: Attributes(Attributes { data: {} })>",
  "Capabilities": "<unsupported: SecurityCapabilities(SecurityCapabilities { value: 0 })>",
  "HistoryId": "<unsupported: UniqueId(UniqueId { index: 0, time: 0, random: 0 })>",
  "LinkedSource": "<unsupported: ContentId(ContentId { url: \"\" })>",
  "Sandboxed": false,
  "ScriptGuid": "{ABFB0D32-709B-4A33-8DCC-862E8CF35283}",
  "Source": "--[==[\n\tBoatTween (because TweenService2 was taken)\n\tby boatbomber (Zack Ovits)\n\tÂ© 2020\n\tAPI:\n\tfunction BoatTween:Create(Object,Data)\n\t\treturns a Tween object\n\t\tParams:\n\t\t- Object\n\t\tThe instance that is having it's properties tweened\n\t\t- Data\n\t\tA dictionary of the various settings of the tween\n\t\t{\n\t\t\tnumber Time = Any positive number\n\t\t\t\tHow long the tween should take to complete\n\t\t\tstring EasingStyle = Any TweenStyle from the list below\n\t\t\t\tThe style that the tween follows\n\t\t\t\t(Note: Uses strings instead of Enum.EasingStyle to allow us to add styles that Roblox doesn't support)\n\t\t\t\tList of available styles:\n\t\t\t\t\tLinear\t\t\t\tQuad\t\t\t\t\tCubic\n\t\t\t\t\tQuart\t\t\t\tQuint\t\t\t\t\tSine\n\t\t\t\t\tExpo\t\t\t\tCirc\t\t\t\t\tElastic\n\t\t\t\t\tBack\t\t\t\tBounce\t\t\t\t\tSmooth\n\t\t\t\t\tSmoother\t\t\tRidiculousWiggle\t\tRevBack\n\t\t\t\t\tSpring\t\t\t\tSoftSpring\t\t\t\tStandard\n\t\t\t\t\tSharp\t\t\t\tAcceleration\t\t\tDeceleration\n\t\t\t\t\tStandardProductive\tEntranceProductive\t\tExitProductive\n\t\t\t\t\tStandardExpressive\tEntranceExpressive\t\tExitExpressive\n\t\t\t\t\tFabricStandard\t\tFabricAccelerate\t\tFabricDecelerate\n\t\t\t\t\tUWPAccelerate\t\tMozillaCurve\n\t\t\tstring EasingDirection = \"In\" or \"Out\" or \"InOut\" or \"OutIn\"\n\t\t\t\tThe direction for the TweenStyle to adhere to\n\t\t\tnumber DelayTime = 0 -> math.huge\n\t\t\t\tThe amount of time before the tween begins playback after calling :Play() on the tween\n\t\t\t\t(Note: doesn't affect :Resume() calls)\n\t\t\tnumber RepeatCount = -1 -> math.huge\n\t\t\t\tHow many times the tween should repeat with -1 being infinity\n\t\t\t\t(Note: will wait the DelayTime in between replaying)\n\t\t\tboolean Reverses = false or true\n\t\t\t\tWhether the tween should reverse itself after completion\n\t\t\t\t(note: Waits the DelayTime before reversing)\n\t\t\ttable Goal = dictionary\n\t\t\t\tA dictionary where the keys are properties to tween and the values are the end goals of said properties\n\t\t\t\tYou may tween any property with value of the following types:\n\t\t\t\t\tnumber\t\t\t\tboolean\t\t\t\t\tCFrame\n\t\t\t\t\tColor3\t\t\t\tUDim2\t\t\t\t\tUDim\n\t\t\t\t\tRay\t\t\t\t\tNumberRange\t\t\t\tNumberSequenceKeypoint\n\t\t\t\t\tPhysicalProperties\tNumberSequence\t\t\tRegion3\n\t\t\t\t\tRect\t\t\t\tVector2\t\t\t\t\tVector3\n\t\t\tstring StepType = \"Stepped\" or \"Heartbeat\" or \"RenderStepped\"\n\t\t\t\tThe event of RunService for the tween to move on\n\t\t}\n\tfunction Tween:Play()\n\t\tPlays the tween, starting from the beginning\n\tfunction Tween:Stop()\n\t\tStops the tween, freezing it in its current state\n\tfunction Tween:Resume()\n\t\tPlays the tween, starting from current position and time\n\tfunction TweenObject:Destroy()\n\t\tClears connections, stops playback, destroys objects\n\tproperty Tween.Instance\n\t\tThe object being tweened\n\tproperty Tween.PlaybackState\n\t\tAn Enum.PlaybackState representing the Tween's current state\n\tevent Tween.Stopped\n\t\tFired when a Tween ends from the :Stop() function\n\tevent Tween.Completed\n\t\tFired when a Tween ends due to :Play() being completed\n\tevent Tween.Resumed\n\t\tFired when a Tween is played through the :Resume() function\n--]==]\n\nlocal RunService = game:GetService(\"RunService\")\nlocal RawTweenFunctions = require(script.TweenFunctions)\nlocal TypeLerpers = require(script.Lerps)\nlocal Heartbeat = RunService.Heartbeat\n\nlocal BoatTween = {}\n\nlocal ValidStepTypes = {\n\t[\"Heartbeat\"] = true;\n\t[\"Stepped\"] = true;\n\t[\"RenderStepped\"] = true;\n}\n\nif not RunService:IsClient() then\n\tValidStepTypes.RenderStepped = nil\nend\n\nlocal TweenFunctions = {\n\tFabricAccelerate = {\n\t\tIn = RawTweenFunctions.InFabricAccelerate;\n\t\tOut = RawTweenFunctions.OutFabricAccelerate;\n\t\tInOut = RawTweenFunctions.InOutFabricAccelerate;\n\t\tOutIn = RawTweenFunctions.OutInFabricAccelerate;\n\t};\n\n\tUWPAccelerate = {\n\t\tIn = RawTweenFunctions.InUWPAccelerate;\n\t\tOut = RawTweenFunctions.OutUWPAccelerate;\n\t\tInOut = RawTweenFunctions.InOutUWPAccelerate;\n\t\tOutIn = RawTweenFunctions.OutInUWPAccelerate;\n\t};\n\n\tCirc = {\n\t\tIn = RawTweenFunctions.InCirc;\n\t\tOut = RawTweenFunctions.OutCirc;\n\t\tInOut = RawTweenFunctions.InOutCirc;\n\t\tOutIn = RawTweenFunctions.OutInCirc;\n\t};\n\n\tRevBack = {\n\t\tIn = RawTweenFunctions.InRevBack;\n\t\tOut = RawTweenFunctions.OutRevBack;\n\t\tInOut = RawTweenFunctions.InOutRevBack;\n\t\tOutIn = RawTweenFunctions.OutInRevBack;\n\t};\n\n\tSpring = {\n\t\tIn = RawTweenFunctions.InSpring;\n\t\tOut = RawTweenFunctions.OutSpring;\n\t\tInOut = RawTweenFunctions.InOutSpring;\n\t\tOutIn = RawTweenFunctions.OutInSpring;\n\t};\n\n\tStandard = {\n\t\tIn = RawTweenFunctions.InStandard;\n\t\tOut = RawTweenFunctions.OutStandard;\n\t\tInOut = RawTweenFunctions.InOutStandard;\n\t\tOutIn = RawTweenFunctions.OutInStandard;\n\t};\n\n\tStandardExpressive = {\n\t\tIn = RawTweenFunctions.InStandardExpressive;\n\t\tOut = RawTweenFunctions.OutStandardExpressive;\n\t\tInOut = RawTweenFunctions.InOutStandardExpressive;\n\t\tOutIn = RawTweenFunctions.OutInStandardExpressive;\n\t};\n\n\tLinear = {\n\t\tIn = RawTweenFunctions.InLinear;\n\t\tOut = RawTweenFunctions.OutLinear;\n\t\tInOut = RawTweenFunctions.InOutLinear;\n\t\tOutIn = RawTweenFunctions.OutInLinear;\n\t};\n\n\tExitProductive = {\n\t\tIn = RawTweenFunctions.InExitProductive;\n\t\tOut = RawTweenFunctions.OutExitProductive;\n\t\tInOut = RawTweenFunctions.InOutExitProductive;\n\t\tOutIn = RawTweenFunctions.OutInExitProductive;\n\t};\n\n\tDeceleration = {\n\t\tIn = RawTweenFunctions.InDeceleration;\n\t\tOut = RawTweenFunctions.OutDeceleration;\n\t\tInOut = RawTweenFunctions.InOutDeceleration;\n\t\tOutIn = RawTweenFunctions.OutInDeceleration;\n\t};\n\n\tSmoother = {\n\t\tIn = RawTweenFunctions.InSmoother;\n\t\tOut = RawTweenFunctions.OutSmoother;\n\t\tInOut = RawTweenFunctions.InOutSmoother;\n\t\tOutIn = RawTweenFunctions.OutInSmoother;\n\t};\n\n\tFabricStandard = {\n\t\tIn = RawTweenFunctions.InFabricStandard;\n\t\tOut = RawTweenFunctions.OutFabricStandard;\n\t\tInOut = RawTweenFunctions.InOutFabricStandard;\n\t\tOutIn = RawTweenFunctions.OutInFabricStandard;\n\t};\n\n\tRidiculousWiggle = {\n\t\tIn = RawTweenFunctions.InRidiculousWiggle;\n\t\tOut = RawTweenFunctions.OutRidiculousWiggle;\n\t\tInOut = RawTweenFunctions.InOutRidiculousWiggle;\n\t\tOutIn = RawTweenFunctions.OutInRidiculousWiggle;\n\t};\n\n\tMozillaCurve = {\n\t\tIn = RawTweenFunctions.InMozillaCurve;\n\t\tOut = RawTweenFunctions.OutMozillaCurve;\n\t\tInOut = RawTweenFunctions.InOutMozillaCurve;\n\t\tOutIn = RawTweenFunctions.OutInMozillaCurve;\n\t};\n\n\tExpo = {\n\t\tIn = RawTweenFunctions.InExpo;\n\t\tOut = RawTweenFunctions.OutExpo;\n\t\tInOut = RawTweenFunctions.InOutExpo;\n\t\tOutIn = RawTweenFunctions.OutInExpo;\n\t};\n\n\tSine = {\n\t\tIn = RawTweenFunctions.InSine;\n\t\tOut = RawTweenFunctions.OutSine;\n\t\tInOut = RawTweenFunctions.InOutSine;\n\t\tOutIn = RawTweenFunctions.OutInSine;\n\t};\n\n\tCubic = {\n\t\tIn = RawTweenFunctions.InCubic;\n\t\tOut = RawTweenFunctions.OutCubic;\n\t\tInOut = RawTweenFunctions.InOutCubic;\n\t\tOutIn = RawTweenFunctions.OutInCubic;\n\t};\n\n\tEntranceExpressive = {\n\t\tIn = RawTweenFunctions.InEntranceExpressive;\n\t\tOut = RawTweenFunctions.OutEntranceExpressive;\n\t\tInOut = RawTweenFunctions.InOutEntranceExpressive;\n\t\tOutIn = RawTweenFunctions.OutInEntranceExpressive;\n\t};\n\n\tElastic = {\n\t\tIn = RawTweenFunctions.InElastic;\n\t\tOut = RawTweenFunctions.OutElastic;\n\t\tInOut = RawTweenFunctions.InOutElastic;\n\t\tOutIn = RawTweenFunctions.OutInElastic;\n\t};\n\n\tQuint = {\n\t\tIn = RawTweenFunctions.InQuint;\n\t\tOut = RawTweenFunctions.OutQuint;\n\t\tInOut = RawTweenFunctions.InOutQuint;\n\t\tOutIn = RawTweenFunctions.OutInQuint;\n\t};\n\n\tEntranceProductive = {\n\t\tIn = RawTweenFunctions.InEntranceProductive;\n\t\tOut = RawTweenFunctions.OutEntranceProductive;\n\t\tInOut = RawTweenFunctions.InOutEntranceProductive;\n\t\tOutIn = RawTweenFunctions.OutInEntranceProductive;\n\t};\n\n\tBounce = {\n\t\tIn = RawTweenFunctions.InBounce;\n\t\tOut = RawTweenFunctions.OutBounce;\n\t\tInOut = RawTweenFunctions.InOutBounce;\n\t\tOutIn = RawTweenFunctions.OutInBounce;\n\t};\n\n\tSmooth = {\n\t\tIn = RawTweenFunctions.InSmooth;\n\t\tOut = RawTweenFunctions.OutSmooth;\n\t\tInOut = RawTweenFunctions.InOutSmooth;\n\t\tOutIn = RawTweenFunctions.OutInSmooth;\n\t};\n\n\tBack = {\n\t\tIn = RawTweenFunctions.InBack;\n\t\tOut = RawTweenFunctions.OutBack;\n\t\tInOut = RawTweenFunctions.InOutBack;\n\t\tOutIn = RawTweenFunctions.OutInBack;\n\t};\n\n\tQuart = {\n\t\tIn = RawTweenFunctions.InQuart;\n\t\tOut = RawTweenFunctions.OutQuart;\n\t\tInOut = RawTweenFunctions.InOutQuart;\n\t\tOutIn = RawTweenFunctions.OutInQuart;\n\t};\n\n\tStandardProductive = {\n\t\tIn = RawTweenFunctions.InStandardProductive;\n\t\tOut = RawTweenFunctions.OutStandardProductive;\n\t\tInOut = RawTweenFunctions.InOutStandardProductive;\n\t\tOutIn = RawTweenFunctions.OutInStandardProductive;\n\t};\n\n\tQuad = {\n\t\tIn = RawTweenFunctions.InQuad;\n\t\tOut = RawTweenFunctions.OutQuad;\n\t\tInOut = RawTweenFunctions.InOutQuad;\n\t\tOutIn = RawTweenFunctions.OutInQuad;\n\t};\n\n\tFabricDecelerate = {\n\t\tIn = RawTweenFunctions.InFabricDecelerate;\n\t\tOut = RawTweenFunctions.OutFabricDecelerate;\n\t\tInOut = RawTweenFunctions.InOutFabricDecelerate;\n\t\tOutIn = RawTweenFunctions.OutInFabricDecelerate;\n\t};\n\n\tAcceleration = {\n\t\tIn = RawTweenFunctions.InAcceleration;\n\t\tOut = RawTweenFunctions.OutAcceleration;\n\t\tInOut = RawTweenFunctions.InOutAcceleration;\n\t\tOutIn = RawTweenFunctions.OutInAcceleration;\n\t};\n\n\tSoftSpring = {\n\t\tIn = RawTweenFunctions.InSoftSpring;\n\t\tOut = RawTweenFunctions.OutSoftSpring;\n\t\tInOut = RawTweenFunctions.InOutSoftSpring;\n\t\tOutIn = RawTweenFunctions.OutInSoftSpring;\n\t};\n\n\tExitExpressive = {\n\t\tIn = RawTweenFunctions.InExitExpressive;\n\t\tOut = RawTweenFunctions.OutExitExpressive;\n\t\tInOut = RawTweenFunctions.InOutExitExpressive;\n\t\tOutIn = RawTweenFunctions.OutInExitExpressive;\n\t};\n\n\tSharp = {\n\t\tIn = RawTweenFunctions.InSharp;\n\t\tOut = RawTweenFunctions.OutSharp;\n\t\tInOut = RawTweenFunctions.InOutSharp;\n\t\tOutIn = RawTweenFunctions.OutInSharp;\n\t};\n}\n\nlocal function Wait(Seconds)\n\tSeconds = math.max(Seconds or 0.03, 0)\n\tlocal TimeRemaining = Seconds\n\n\twhile TimeRemaining > 0 do\n\t\tTimeRemaining -= Heartbeat:Wait()\n\tend\n\n\treturn Seconds - TimeRemaining\nend\n\nfunction BoatTween.Create(_, Object, Data)\n\t-- Validate\n\tif not Object or typeof(Object) ~= \"Instance\" then\n\t\treturn warn(\"Invalid object to tween:\", Object)\n\tend\n\n\tData = type(Data) == \"table\" and Data or {}\n\n\t-- Define settings\n\tlocal EventStep: RBXScriptSignal = ValidStepTypes[Data.StepType] and RunService[Data.StepType] or RunService.Stepped\n\tlocal TweenFunction = TweenFunctions[Data.EasingStyle or \"Quad\"][Data.EasingDirection or \"In\"]\n\tlocal Time = math.max(type(Data.Time) == \"number\" and Data.Time or 1, 0.001)\n\tlocal Goal = type(Data.Goal) == \"table\" and Data.Goal or {}\n\tlocal DelayTime = type(Data.DelayTime) == \"number\" and Data.DelayTime > 0.027 and Data.DelayTime\n\tlocal RepeatCount = (type(Data.RepeatCount) == \"number\" and math.max(Data.RepeatCount, -1) or 0) + 1\n\n\tlocal TweenData = {}\n\tfor Property, EndValue in pairs(Goal) do\n\t\tTweenData[Property] = TypeLerpers[typeof(EndValue)](Object[Property], EndValue)\n\tend\n\n\t-- Create instances\n\tlocal CompletedEvent = Instance.new(\"BindableEvent\")\n\tlocal StoppedEvent = Instance.new(\"BindableEvent\")\n\tlocal ResumedEvent = Instance.new(\"BindableEvent\")\n\n\tlocal PlaybackConnection\n\tlocal StartTime, ElapsedTime = os.clock(), 0\n\n\tlocal TweenObject = {\n\t\t[\"Instance\"] = Object;\n\t\t[\"PlaybackState\"] = Enum.PlaybackState.Begin;\n\n\t\t[\"Completed\"] = CompletedEvent.Event;\n\t\t[\"Resumed\"] = ResumedEvent.Event;\n\t\t[\"Stopped\"] = StoppedEvent.Event;\n\t}\n\n\tfunction TweenObject.Destroy()\n\t\tif PlaybackConnection then\n\t\t\tPlaybackConnection:Disconnect()\n\t\t\tPlaybackConnection = nil\n\t\tend\n\n\t\tCompletedEvent:Destroy()\n\t\tStoppedEvent:Destroy()\n\t\tResumedEvent:Destroy()\n\t\tTweenObject = nil\n\tend\n\n\tlocal CurrentlyReversing = false\n\tlocal CurrentLayer = 0\n\n\tlocal function Play(Layer, Reverse)\n\t\tif PlaybackConnection then\n\t\t\tPlaybackConnection:Disconnect()\n\t\t\tPlaybackConnection = nil\n\t\tend\n\n\t\tLayer = Layer or 1\n\t\tif RepeatCount ~= 0 then\n\t\t\tif Layer > RepeatCount then\n\t\t\t\tTweenObject.PlaybackState = Enum.PlaybackState.Completed\n\t\t\t\tCompletedEvent:Fire()\n\t\t\t\tCurrentlyReversing = false\n\t\t\t\tCurrentLayer = 1\n\t\t\t\treturn\n\t\t\tend\n\t\tend\n\n\t\tCurrentLayer = Layer\n\n\t\tif Reverse then\n\t\t\tCurrentlyReversing = true\n\t\tend\n\n\t\tif DelayTime then\n\t\t\tTweenObject.PlaybackState = Enum.PlaybackState.Delayed;\n\t\t\t(DelayTime < 2 and Wait or wait)(DelayTime)\n\t\tend\n\n\t\tStartTime = os.clock() - ElapsedTime\n\t\tPlaybackConnection = EventStep:Connect(function()\n\t\t\tElapsedTime = os.clock() - StartTime\n\t\t\tif ElapsedTime >= Time then\n\t\t\t\tif Reverse then\n\t\t\t\t\tfor Property, Lerper in pairs(TweenData) do\n\t\t\t\t\t\tObject[Property] = Lerper(0)\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tfor Property, Lerper in pairs(TweenData) do\n\t\t\t\t\t\tObject[Property] = Lerper(1)\n\t\t\t\t\tend\n\t\t\t\tend\n\n\t\t\t\tPlaybackConnection:Disconnect()\n\t\t\t\tPlaybackConnection = nil\n\t\t\t\tif Reverse then\n\t\t\t\t\tElapsedTime = 0\n\t\t\t\t\tPlay(Layer + 1, false)\n\t\t\t\telse\n\t\t\t\t\tif Data.Reverses then\n\t\t\t\t\t\tElapsedTime = 0\n\t\t\t\t\t\tPlay(Layer, true)\n\t\t\t\t\telse\n\t\t\t\t\t\tElapsedTime = 0\n\t\t\t\t\t\tPlay(Layer + 1, false)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tlocal Delta = Reverse and (1 - ElapsedTime/Time) or (ElapsedTime/Time)\n\t\t\t\tlocal Position = math.clamp(TweenFunction(Delta), 0, 1)\n\n\t\t\t\tfor Property, Lerper in pairs(TweenData) do\n\t\t\t\t\tObject[Property] = Lerper(Position)\n\t\t\t\tend\n\t\t\tend\n\t\tend)\n\n\t\tTweenObject.PlaybackState = Enum.PlaybackState.Playing\n\tend\n\n\tfunction TweenObject.Play()\n\t\tElapsedTime = 0\n\t\tPlay(1, false)\n\tend\n\n\tfunction TweenObject.Stop()\n\t\tif PlaybackConnection then\n\t\t\tPlaybackConnection:Disconnect()\n\t\t\tPlaybackConnection = nil\n\t\t\tTweenObject.PlaybackState = Enum.PlaybackState.Cancelled\n\t\t\tStoppedEvent:Fire()\n\t\tend\n\tend\n\n\tfunction TweenObject.Resume()\n\t\tPlay(CurrentLayer, CurrentlyReversing)\n\t\tResumedEvent:Fire()\n\tend\n\n\treturn TweenObject\nend\n\nreturn BoatTween",
  "SourceAssetId": "<unsupported: Int64(4939498795)>",
  "Tags": "<unsupported: Tags(Tags { members: [] })>",
  "UniqueId": "<unsupported: UniqueId(UniqueId { index: 26679, time: 142155861, random: 1232354692393223026 })>"
}