{
  "Attributes": "<unsupported: Attributes(Attributes { data: {} })>",
  "Capabilities": "<unsupported: SecurityCapabilities(SecurityCapabilities { value: 0 })>",
  "HistoryId": "<unsupported: UniqueId(UniqueId { index: 0, time: 0, random: 0 })>",
  "LinkedSource": "<unsupported: ContentId(ContentId { url: \"\" })>",
  "Sandboxed": false,
  "ScriptGuid": "{FB904EE9-3CAF-4A83-8394-6B7D88C4E872}",
  "Source": "local HttpService = game:GetService(\"HttpService\")\nlocal RunService = game:GetService(\"RunService\")\nlocal heartbeat = RunService.Heartbeat\nlocal Signal = {}\nSignal.__index = Signal\nSignal.ClassName = \"Signal\"\nSignal.totalConnections = 0\n\n\n\n-- CONSTRUCTOR\nfunction Signal.new(createConnectionsChangedSignal)\n\tlocal self = setmetatable({}, Signal)\n\t\n\tif createConnectionsChangedSignal then\n\t\tself.connectionsChanged = Signal.new()\n\tend\n\n\tself.connections = {}\n\tself.totalConnections = 0\n\tself.waiting = {}\n\tself.totalWaiting = 0\n\n\treturn self\nend\n\n\n\n-- METHODS\nfunction Signal:Fire(...)\n\tfor _, connection in pairs(self.connections) do\n\t\t--connection.Handler(...)\n\t\ttask.spawn(connection.Handler, ...)\n\tend\n\tif self.totalWaiting > 0 then\n\t\tlocal packedArgs = table.pack(...)\n\t\tfor waitingId, _ in pairs(self.waiting) do\n\t\t\tself.waiting[waitingId] = packedArgs\n\t\tend\n\tend\nend\nSignal.fire = Signal.Fire\n\nfunction Signal:Connect(handler)\n\tif not (type(handler) == \"function\") then\n\t\terror((\"connect(%s)\"):format(typeof(handler)), 2)\n\tend\n\t\n\tlocal signal = self\n\tlocal connectionId = HttpService:GenerateGUID(false)\n\tlocal connection = {}\n\tconnection.Connected = true\n\tconnection.ConnectionId = connectionId\n\tconnection.Handler = handler\n\tself.connections[connectionId] = connection\n\n\tfunction connection:Disconnect()\n\t\tsignal.connections[connectionId] = nil\n\t\tconnection.Connected = false\n\t\tsignal.totalConnections -= 1\n\t\tif signal.connectionsChanged then\n\t\t\tsignal.connectionsChanged:Fire(-1)\n\t\tend\n\tend\n\tconnection.Destroy = connection.Disconnect\n\tconnection.destroy = connection.Disconnect\n\tconnection.disconnect = connection.Disconnect\n\tself.totalConnections += 1\n\tif self.connectionsChanged then\n\t\tself.connectionsChanged:Fire(1)\n\tend\n\n\treturn connection\nend\nSignal.connect = Signal.Connect\n\nfunction Signal:Wait()\n\tlocal waitingId = HttpService:GenerateGUID(false)\n\tself.waiting[waitingId] = true\n\tself.totalWaiting += 1\n\trepeat heartbeat:Wait() until self.waiting[waitingId] ~= true\n\tself.totalWaiting -= 1\n\tlocal args = self.waiting[waitingId]\n\tself.waiting[waitingId] = nil\n\treturn unpack(args)\nend\nSignal.wait = Signal.Wait\n\nfunction Signal:Destroy()\n\tif self.bindableEvent then\n\t\tself.bindableEvent:Destroy()\n\t\tself.bindableEvent = nil\n\tend\n\tif self.connectionsChanged then\n\t\tself.connectionsChanged:Fire(-self.totalConnections)\n\t\tself.connectionsChanged:Destroy()\n\t\tself.connectionsChanged = nil\n\tend\n\tself.totalConnections = 0\n\tfor connectionId, connection in pairs(self.connections) do\n\t\tself.connections[connectionId] = nil\n\tend\nend\nSignal.destroy = Signal.Destroy\nSignal.Disconnect = Signal.Destroy\nSignal.disconnect = Signal.Destroy\n\n\n\nreturn Signal",
  "SourceAssetId": "<unsupported: Int64(-1)>",
  "Tags": "<unsupported: Tags(Tags { members: [] })>",
  "UniqueId": "<unsupported: UniqueId(UniqueId { index: 25880, time: 142155861, random: 1232354692393223026 })>"
}