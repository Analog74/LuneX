{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: Bezier)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: Bezier)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: Bezier)>",
  "Sandboxed": false,
  "ScriptGuid": "{11FD95A8-5A25-45DC-908D-6C30C222C959}",
  "Source": "local function Linear(T)\n\treturn T\nend\n\nlocal function Bezier(X1, Y1, X2, Y2)\n\tif not (X1 and Y1 and X2 and Y2) then\n\t\terror(\"Need 4 numbers to construct a Bezier curve\", 0)\n\tend\n\n\tif not (0 <= X1 and X1 <= 1 and 0 <= X2 and X2 <= 1) then\n\t\terror(\"The x values must be within range [0, 1]\", 0)\n\tend\n\n\tif X1 == Y1 and X2 == Y2 then\n\t\treturn Linear\n\tend\n\n\tlocal SampleValues = {}\n\tfor Index = 0, 10 do\n\t\tlocal IndexDiv10 = Index / 10\n\t\tSampleValues[Index] = (((1 - 3 * X2 + 3 * X2) * IndexDiv10 + (3 * X2 - 6 * X1)) * IndexDiv10 + (3 * X1)) * IndexDiv10\n\tend\n\n\treturn function(T)\n\t\tif X1 == Y1 and X2 == Y2 then\n\t\t\treturn Linear\n\t\tend\n\n\t\tif T == 0 or T == 1 then\n\t\t\treturn T\n\t\tend\n\n\t\tlocal GuessT\n\t\tlocal IntervalStart = 0\n\t\tlocal CurrentSample = 1\n\n\t\twhile CurrentSample ~= 10 and SampleValues[CurrentSample] <= T do\n\t\t\tIntervalStart += 0.1\n\t\t\tCurrentSample += 1\n\t\tend\n\n\t\tCurrentSample -= 1\n\n\t\tlocal Dist = (T - SampleValues[CurrentSample]) / (SampleValues[CurrentSample + 1] - SampleValues[CurrentSample])\n\t\tlocal GuessForT = IntervalStart + Dist / 10\n\t\tlocal InitialSlope = 3 * (1 - 3 * X2 + 3 * X1) * GuessForT * GuessForT + 2 * (3 * X2 - 6 * X1) * GuessForT + (3 * X1)\n\n\t\tif InitialSlope >= 0.001 then\n\t\t\tfor _ = 0, 3 do\n\t\t\t\tlocal CurrentSlope = 3 * (1 - 3 * X2 + 3 * X1) * GuessForT * GuessForT + 2 * (3 * X2 - 6 * X1) * GuessForT + (3 * X1)\n\t\t\t\tlocal CurrentX = ((((1 - 3 * X2 + 3 * X1) * GuessForT + (3 * X2 - 6 * X1)) * GuessForT + (3 * X1)) * GuessForT) - T\n\t\t\t\tGuessForT -= CurrentX / CurrentSlope\n\t\t\tend\n\n\t\t\tGuessT = GuessForT\n\t\telseif InitialSlope == 0 then\n\t\t\tGuessT = GuessForT\n\t\telse\n\t\t\tlocal AB = IntervalStart + 0.1\n\t\t\tlocal CurrentX, CurrentT, Index = 0, nil, nil\n\n\t\t\twhile math.abs(CurrentX) > 0.0000001 and Index < 10 do\n\t\t\t\tCurrentT = IntervalStart + (AB - IntervalStart) / 2\n\t\t\t\tCurrentX = ((((1 - 3 * X2 + 3 * X1) * CurrentT + (3 * X2 - 6 * X1)) * CurrentT + (3 * X1)) * CurrentT) - T\n\t\t\t\tif CurrentX > 0 then\n\t\t\t\t\tAB = CurrentT\n\t\t\t\telse\n\t\t\t\t\tIntervalStart = CurrentT\n\t\t\t\tend\n\n\t\t\t\tIndex += 1\n\t\t\tend\n\n\t\t\tGuessT = CurrentT\n\t\tend\n\n\t\treturn (((1 - 3 * Y2 + 3 * Y1) * GuessT + (3 * Y2 - 6 * Y1)) * GuessT + (3 * Y1)) * GuessT\n\tend\nend\n\nreturn Bezier",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: Bezier)>"
}