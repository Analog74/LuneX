{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: InputPlus)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: InputPlus)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: InputPlus)>",
  "Sandboxed": false,
  "ScriptGuid": "{A07C608F-BF5A-4231-8550-9181B2A3187E}",
  "Source": "local TypeDefinitions = require(script:WaitForChild(\"TypeDefinitions\"));\ntype InputType = TypeDefinitions.Input;\n\nlocal Input : InputType = {}\nlocal Ignore = {'Settings','Utils', 'TypeDefinitions'}\n\nlocal Folder = Instance.new('Folder')\nFolder.Name = 'EventStorage'\nFolder.Parent = game.ReplicatedStorage\n\nlocal UIS = game:GetService('UserInputService')\n\nfor _ , v in ipairs(script:GetChildren()) do\n\tif v:IsA('ModuleScript') and not table.find(Ignore,v.Name) then\n\t\tInput[v.Name] = require(v)\n\tend\nend\n\nUIS.InputBegan:Connect(function(...)\n\tInput.Sequence.Hook(...)\n\tInput.Hold.HookStart(...)\nend)\n\nUIS.InputEnded:Connect(function(...)\n\tInput.Hold.HookEnd(...)\nend)\n\nreturn Input",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: InputPlus)>"
}