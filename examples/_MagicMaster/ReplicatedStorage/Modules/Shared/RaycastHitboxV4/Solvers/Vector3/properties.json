{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: Vector3)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: Vector3)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: Vector3)>",
  "Sandboxed": false,
  "ScriptGuid": "{CE44CC26-1DBA-4508-BA91-A71241E68CF7}",
  "Source": "--!strict\n--- Calculates ray origin and directions for vector-based raycast points\n-- @author Swordphin123\n\nlocal solver = {}\n\nlocal EMPTY_VECTOR: Vector3 = Vector3.new()\n\n--- Solve direction and length of the ray by comparing current and last frame's positions\n-- @param point type\nfunction solver:Solve(point: {[string]: any}): (Vector3, Vector3)\n\t--- Translate localized Vector3 positions to world space values\n\tlocal originPart: BasePart = point.Instances[1]\n\tlocal vector: Vector3 = point.Instances[2]\n\tlocal pointToWorldSpace: Vector3 = originPart.Position + originPart.CFrame:VectorToWorldSpace(vector)\n\n\t--- If LastPosition is nil (caused by if the hitbox was stopped previously), rewrite its value to the current point position\n\tif not point.LastPosition then\n\t\tpoint.LastPosition = pointToWorldSpace\n\tend\n\n\tlocal origin: Vector3 = point.LastPosition\n\tlocal direction: Vector3 = pointToWorldSpace - (point.LastPosition or EMPTY_VECTOR)\n\n\tpoint.WorldSpace = pointToWorldSpace\n\n\treturn origin, direction\nend\n\nfunction solver:UpdateToNextPosition(point: {[string]: any}): Vector3\n\treturn point.WorldSpace\nend\n\nfunction solver:Visualize(point: {[string]: any}): CFrame\n\treturn CFrame.lookAt(point.WorldSpace, point.LastPosition)\nend\n\nreturn solver",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: Vector3)>"
}