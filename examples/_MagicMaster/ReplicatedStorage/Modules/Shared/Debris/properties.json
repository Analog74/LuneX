{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: Debris)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: Debris)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: Debris)>",
  "Sandboxed": false,
  "ScriptGuid": "{8F678CCA-0A03-4455-B566-A13000F294BB}",
  "Source": "local DebrisModule = {}\n\nlocal ts = game:GetService(\"TweenService\")\nlocal cs = game:GetService(\"CollectionService\")\nlocal rs = game:GetService(\"ReplicatedStorage\")\nlocal RunService = game:GetService(\"RunService\")\nlocal Debris = game:GetService(\"Debris\")\n\nlocal fx = rs:WaitForChild(\"FX\")\n\nlocal function neonFlash(Target, originalMaterial, OriginalBrickColor)\n\tdelay(0.05, function()\n\t\tTarget.Material = Enum.Material.Neon\n\t\tTarget.BrickColor = BrickColor.new(\"Persimmon\")\n\t\twait(0.05)\n\t\tTarget.Material = originalMaterial\n\t\tTarget.BrickColor = OriginalBrickColor\n\n\t\tdelay(0.1, function()\n\t\t\tTarget.Material = Enum.Material.Neon\n\t\t\tTarget.BrickColor = BrickColor.new(\"Persimmon\")\n\t\t\twait(0.05)\n\t\t\tTarget.Material = originalMaterial\n\t\t\tTarget.BrickColor = OriginalBrickColor\n\n\t\t\tdelay(0.1, function()\n\t\t\t\tTarget.Material = Enum.Material.Neon\n\t\t\t\tTarget.BrickColor = BrickColor.new(\"Persimmon\")\n\t\t\t\twait(0.05)\n\t\t\t\tTarget.Material = originalMaterial\n\t\t\t\tTarget.BrickColor = OriginalBrickColor\n\t\t\t\tdelay(0.1, function()\n\t\t\t\t\tTarget.Material = Enum.Material.Neon\n\t\t\t\t\tTarget.BrickColor = BrickColor.new(\"Persimmon\")\n\t\t\t\tend)\n\t\t\tend)\n\t\tend)\n\tend)\nend\n\nfunction DebrisModule.Blocks(TargetCFrame, skillName)\n\tlocal folder = Instance.new(\"Folder\")\n\tfolder.Name = \"Debris\"\n\tfolder.Parent = workspace\n\t\n\tlocal floor = cs:GetTagged(\"Floor\")\n\t\n\tif skillName == \"Hammer\" then\n\n\t\tlocal Blocks = script:WaitForChild(\"Hammer\"):Clone()\n\t\tBlocks:SetPrimaryPartCFrame(TargetCFrame * CFrame.new(10, 0, 0) * CFrame.Angles(0,math.rad(0), math.rad(-90)))\n\t\tBlocks.Parent = folder\n\n\t\tlocal fullSize = Vector3.new(8, 3, 3)\n\n\t\tfor i, v in pairs(Blocks:GetChildren()) do\t\t\n\t\t\tif v.Name == \"Block\" then\n\t\t\t\tlocal rayparams = RaycastParams.new()\n\t\t\t\trayparams.FilterType = Enum.RaycastFilterType.Whitelist\n\t\t\t\trayparams.FilterDescendantsInstances = {floor}\n\t\t\t\t\n\t\t\t\tlocal ray = workspace:Raycast(v.CFrame.p, v.CFrame.UpVector * -10000, rayparams)\n\t\t\t\tif ray then\n\t\t\t\t\tv.Material = ray.Instance.Material\n\t\t\t\t\tv.Color = ray.Instance.Color\n\t\t\t\t\tv.Position = Vector3.new(v.Position.X, ray.Instance.Size.Y, v.Position.Z)\n\t\t\t\tend\n\n\t\t\t\tlocal args = {Size = fullSize}\n\t\t\t\tlocal info = TweenInfo.new(0.1, Enum.EasingStyle.Elastic)\n\t\t\t\tlocal t = ts:Create(v, info, args)\n\t\t\t\tt:Play()\n\n\t\t\t\tdelay(0.05, function()\n\t\t\t\t\tdelay(4, function()\n\t\t\t\t\t\tlocal a = {Size = Vector3.new(0.005,0.005,0.005)}\n\t\t\t\t\t\tlocal i = TweenInfo.new(0.7, Enum.EasingStyle.Back)\n\t\t\t\t\t\tlocal tw = ts:Create(v, i, a)\n\n\t\t\t\t\t\ttw:Play()\n\t\t\t\t\t\t--neonFlash(v, v.Material, v.BrickColor)\n\n\t\t\t\t\t\tdelay(1, function()\n\t\t\t\t\t\t\tv:Destroy()\n\t\t\t\t\t\tend)\n\t\t\t\t\tend)\n\t\t\t\tend)\n\t\t\tend\n\t\tend\n\t\tgame.Debris:AddItem(folder, 7)\n\telseif skillName == \"Thunder\" then\n\t\tlocal folder = Instance.new(\"Folder\")\n\t\tfolder.Name = \"Debris\"\n\t\tfolder.Parent = workspace\n\n\t\tlocal Blocks = script:WaitForChild(\"Thunder\"):Clone()\n\t\tBlocks:SetPrimaryPartCFrame(TargetCFrame * CFrame.new(-35.5,0, 0) * CFrame.Angles(0,math.rad(0), math.rad(-90)))\n\t\tBlocks.Parent = folder\n\n\t\tlocal fullSize = Vector3.new(14, 3, 6)\n\n\t\tlocal cs = game:GetService(\"CollectionService\")\n\n\t\tlocal floor = cs:GetTagged(\"Floor\")\n\n\t\tfor i, v in pairs(Blocks:GetChildren()) do\t\t\n\t\t\tif v.Name == \"Block\" then\n\n\t\t\t\tlocal rayparams = RaycastParams.new()\n\t\t\t\trayparams.FilterType = Enum.RaycastFilterType.Whitelist\n\t\t\t\trayparams.FilterDescendantsInstances = {floor}\n\n\t\t\t\tlocal ray = workspace:Raycast(v.CFrame.p, v.CFrame.UpVector * -10000, rayparams)\n\t\t\t\tif ray then\n\t\t\t\t\tv.Material = ray.Instance.Material\n\t\t\t\t\tv.Color = ray.Instance.Color\n\t\t\t\t\tv.Position = Vector3.new(v.Position.X, ray.Instance.Size.Y, v.Position.Z)\n\t\t\t\tend\n\n\t\t\t\tlocal args = {Size = fullSize}\n\t\t\t\tlocal info = TweenInfo.new(0.1, Enum.EasingStyle.Elastic)\n\t\t\t\tlocal t = ts:Create(v, info, args)\n\t\t\t\tt:Play()\n\n\t\t\t\tdelay(0.05, function()\n\t\t\t\t\tdelay(4, function()\n\t\t\t\t\t\tlocal a = {Size = Vector3.new(0.005,0.005,0.005)}\n\t\t\t\t\t\tlocal i = TweenInfo.new(0.7, Enum.EasingStyle.Back)\n\t\t\t\t\t\tlocal tw = ts:Create(v, i, a)\n\n\t\t\t\t\t\ttw:Play()\n\t\t\t\t\t\t--neonFlash(v, v.Material, v.BrickColor)\n\n\t\t\t\t\t\tdelay(1, function()\n\t\t\t\t\t\t\tv:Destroy()\n\t\t\t\t\t\tend)\n\t\t\t\t\tend)\n\t\t\t\tend)\n\t\t\tend\n\t\tend\n\t\tgame.Debris:AddItem(folder, 7)\n\tend\nend\n\nfunction DebrisModule.BlocksAround(Target, amount, radius, size)\n\tlocal yOffset = 0 --How far you want your parts to go down below the HMRP\n\t\n\tlocal folder = Instance.new(\"Folder\")\n\tfolder.Name = \"PartCache\"\n\tfolder.Parent = workspace\n\t\n\tlocal function Part() -- Function to instantiate your part for each limb\n\t\tlocal prt =  Instance.new(\"Part\")\n\t\tprt.Size = Vector3.new(0,0,0)\n\t\tprt.Anchored = true\n\t\tprt.CanCollide = false\n\t\treturn prt\n\tend\n\t\n\tlocal floor = cs:GetTagged(\"Floor\")\n\t\n\tlocal total = amount -->> Such as there are 8 limbs in this post\n\tlocal standardRadius = 10\n\t\n\tlocal startInfo = TweenInfo.new(0.35, Enum.EasingStyle.Quad)\n\tlocal endInfo = TweenInfo.new(0.4, Enum.EasingStyle.Back)\n\t\n\tlocal startAgrs = { Size = size}\n\tlocal endArgs = { Size = Vector3.new(0,0,0) }\n\t\n\tfor i=1,total do\n\t\tlocal angle = (math.pi*2/total) * i  -- There are 360 degrees in a circle or pi*2 radians\n\t\tlocal x = radius * math.cos(angle) \n\t\tlocal y = radius * math.sin(angle)\n\n\t\tlocal part = Part()\n\t\tpart.CFrame = Target.CFrame * CFrame.new(x, yOffset, y)\n\t\t\n\t\tpart.Parent = folder\n\t\t\n\t\tlocal rayparams = RaycastParams.new()\n\t\trayparams.FilterType = Enum.RaycastFilterType.Whitelist\n\t\trayparams.FilterDescendantsInstances = {floor}\n\t\t\n\t\tlocal startTween = ts:Create(part, startInfo, startAgrs):Play()\n\t\ttask.delay(4, function()\n\t\t\tlocal endTween = ts:Create(part, endInfo, endArgs):Play()\n\t\tend)\n\t\t\n\t\tlocal ray = workspace:Raycast(part.CFrame.p, part.CFrame.UpVector * -10000, rayparams)\n\t\tif ray then\n\t\t\tpart.Material = ray.Instance.Material\n\t\t\tpart.Color = ray.Instance.Color\n\t\t\tpart.CFrame = CFrame.new(part.CFrame.X, ray.Instance.Size.Y, part.CFrame.Z)\n\t\t\tpart.CFrame = CFrame.lookAt(part.CFrame.p, Target.CFrame.p)\n\t\t\t--part.Orientation = Vector3.new(part.Orientation.X, part.Orientation.Y, part.Orientation.Z)\n\t\tend\n\tend\n\t\n\tgame.Debris:AddItem(folder, 7)\n\t\nend\n\nfunction DebrisModule.BlockExplosion(Target, TargetPosition, TargetCFrame)\n\tfor partAdd = 1, math.random(5, 10) do\n\t\tlocal Effect = script:WaitForChild(\"Block\"):Clone()\n\t\tEffect.Transparency = 0\n\t\tEffect.Parent = workspace\n\t\t\n\t\tlocal size = math.random(4, 6)\n\n\t\tlocal origin = TargetPosition\n\t\tlocal direction = Vector3.new(0,-100,0)\n\t\t\n\t\tlocal floor = cs:GetTagged(\"Floor\")\n\t\t\n\t\tlocal Params = RaycastParams.new()\n\t\tParams.FilterDescendantsInstances = floor\n\t\tParams.FilterType = Enum.RaycastFilterType.Whitelist\n\t\t\n\t\tlocal raycastResult = workspace:Raycast(origin, direction, Params)\n\t\t\n\t\tlocal hitPart = raycastResult.Instance\n\n\t\tEffect.Material = hitPart.Material\n\t\tEffect.Color = hitPart.Color\n\t\tEffect.Size = Vector3.new(size,size,size)\n\n\t\tEffect.CFrame = TargetCFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))\n\t\t\n\t\t\n\t\tlocal db = false\n\t\tdelay(0.5, function()\n\t\t\tEffect.Touched:Connect(function(hit)\n\t\t\t\tif cs:HasTag(hit, \"Floor\") or cs:HasTag(hit.Parent, \"Floor\") and not db then\n\t\t\t\t\tlocal expFX = fx:FindFirstChild(\"Break\"):Clone()\n\t\t\t\t\texpFX.Color = ColorSequence.new(Effect.Color)\n\t\t\t\t\texpFX.Parent = Effect\n\t\t\t\t\texpFX:Emit(70)\n\t\t\t\t\t\n\t\t\t\t\tlocal sfx = script:FindFirstChild(\"Break\"):Clone()\n\t\t\t\t\tsfx.Parent = Effect\n\t\t\t\t\tsfx:Play()\n\n\t\t\t\t\tEffect.Anchored = true\n\t\t\t\t\tEffect.Transparency = 1\n\t\t\t\tend\n\t\t\tend)\n\t\tend)\n\t\t\n\t\t--Effect.Splatter:Play()\n\n\t\tlocal EffectVelocity = Instance.new(\"BodyVelocity\", Effect)\n\t\tEffectVelocity.MaxForce = Vector3.new(0.5, 2, 0.5) * 1000000;\n\t\tEffectVelocity.Velocity = Vector3.new(0.5, 2, 0.5) * Effect.CFrame.LookVector * math.random(50, 70)\n\n\t\tgame.Debris:AddItem(EffectVelocity, 0.3)\n\t\tgame.Debris:AddItem(Effect, 7)\n\tend\nend\n\n--[[ -- NOT WORKING, TOO LAZY TO FIX!! DNC!!!\n\nDebrisModule.Parts = function(target)\n\tlocal Tween1 = TweenInfo.new(.45,Enum.EasingStyle.Back,Enum.EasingDirection.In)\n\t\n\tlocal taggedFloor = cs:GetTagged(\"Floor\")\n\t\n\tlocal raycastParams = RaycastParams.new()\n\traycastParams.FilterDescendantsInstances = {taggedFloor}\n\traycastParams.FilterType = Enum.RaycastFilterType.Whitelist\n\t\n\tlocal Amount,Max = 20, 2.5  ---Amount of rocks and max length upwards\n\tlocal FirstDuration, RocksLength = .5, 3--- How long it takes to tween and when it goes away\n\tlocal Cframe,Iteration = target.CFrame, 10 --- Where the part spawns and how much it expands outwards\n\t\n\tlocal Angeled360 = 360 / Amount\n\t\n\tlocal RockModel = Instance.new(\"Model\", workspace)\n\tDebris:AddItem(RockModel, RocksLength + .25)\n\tfor Index = 1, Amount do\n\t\t--// Calculations\n\t\tlocal SizeCalc = math.sin(math.pi / Amount) * Iteration * 2 * 1.01\n\t\tlocal PositionCalc = Cframe * CFrame.Angles(0, math.rad(Index * Angeled360), 0) * CFrame.new(0, 0, Iteration) * CFrame.Angles(math.rad(45), 0, 0)\n\t\tlocal YAndZ = Max * math.random(50, 120) / 100\n\t\tlocal RandomizedForCalc = 5 + Max * 2\n\t\tlocal RaycastToSet = CFrame.new(PositionCalc.Position) * CFrame.new(0, RandomizedForCalc, 0)\n\t\tlocal Target, Position, Surface = workspace:FindPartOnRayWithWhitelist(Ray.new(RaycastToSet.p, RaycastToSet.upVector * (-RandomizedForCalc * 2)), { workspace.World.Map,})\n\n\t\tlocal InstancedPart = script.Part:Clone()\n\t\tInstancedPart.CanCollide = false\n\t\tInstancedPart.Size = Vector3.new(SizeCalc, YAndZ, YAndZ)\n\n\t\tif Target then\n\t\t\tInstancedPart.Color = Target.Color\n\t\t\tInstancedPart.Material = Target.Material\n\t\t\tlocal Mult = 1\n\t\t\tif Position.Y < PositionCalc.Position.Y then\n\t\t\t\tMult = -1\n\t\t\tend\n\t\t\tlocal MagZX = PositionCalc * CFrame.new(0, (PositionCalc.Position - Position).Magnitude * Mult, 0)\n\t\t\tlocal ToReturn = CFrame.new(Position, Position + Surface) * CFrame.Angles(math.rad(90), 0, 0)\n\n\t\t\tInstancedPart.CFrame = Cframe * CFrame.Angles(0, math.rad(Index * Angeled360), 0) * CFrame.new(0, 0, Iteration / 2)\n\t\t\tInstancedPart.Parent = RockModel\n\t\t\tlocal X, Y, Z = Cframe:components()\n\n\t\t\tlocal Ax, Ay, Az, A1, A2, A3, A4, A5, A6, A7, A8, A9 = ToReturn:components()\n\n\t\t\tlocal Tween = ts:Create(InstancedPart,TweenInfo.new(FirstDuration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0), {CFrame = CFrame.new(ToReturn.Position, CFrame.new(X, Y, Z, A1, A2, A3, A4, A5, A6, A7, A8, A9).Position) * CFrame.Angles(math.rad(math.random(20, 50)), 0, 0)})\n\t\t\tTween:Play()\n\t\t\tTween:Destroy()\n\n\t\t\tcoroutine.resume(coroutine.create(function()\n\t\t\t\twait(RocksLength)\n\t\t\t\tif InstancedPart then\n\t\t\t\t\tlocal Tween = ts:Create(InstancedPart.Mesh,TweenInfo.new(.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0), {[\"Scale\"] = Vector3.new(1, 0, 0)})\n\t\t\t\t\tTween:Play()\n\t\t\t\t\tTween:Destroy()\n\n\t\t\t\t\tlocal Tween = ts:Create(InstancedPart,TweenInfo.new(.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0), {CFrame = InstancedPart.CFrame * CFrame.new(0, -Max * 1.25, 0)})\n\t\t\t\t\tTween:Play()\n\t\t\t\t\tTween:Destroy()\n\t\t\t\tend\n\t\t\tend))\n\t\telse\n\t\t\tInstancedPart:Destroy()\n\t\tend\n\tend\n\t\nend\n\n--]]\n\nreturn DebrisModule\n",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: Debris)>"
}