{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: MockDataStorePages)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: MockDataStorePages)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: MockDataStorePages)>",
  "Sandboxed": false,
  "ScriptGuid": "{3B7C48A9-5E59-4C40-97B2-05BADA421B3D}",
  "Source": "--[[\n\tMockDataStorePages.lua\n\tThis module implements the API and functionality of Roblox's DataStorePages class.\n\n\tThis module is licensed under APLv2, refer to the LICENSE file or:\n\thttps://github.com/buildthomas/MockDataStoreService/blob/master/LICENSE\n]]\n\nlocal MockDataStorePages = {}\nMockDataStorePages.__index = MockDataStorePages\n\nlocal MockDataStoreManager = require(script.Parent.MockDataStoreManager)\nlocal Utils = require(script.Parent.MockDataStoreUtils)\n\nfunction MockDataStorePages:GetCurrentPage()\n\tlocal retValue = {}\n\n\tlocal minimumIndex = math.max(1, (self.__currentPage - 1) * self.__pageSize + 1)\n\tlocal maximumIndex = math.min(self.__currentPage * self.__pageSize, #self.__results)\n\tfor i = minimumIndex, maximumIndex do\n\t\ttable.insert(retValue, {key = self.__results[i].key, value = self.__results[i].value})\n\tend\n\n\treturn retValue\nend\n\nfunction MockDataStorePages:AdvanceToNextPageAsync()\n\tif self.IsFinished then\n\t\terror(\"AdvanceToNextPageAsync rejected with error (no pages to advance to)\", 2)\n\tend\n\n\tUtils.simulateErrorCheck(\"AdvanceToNextPageAsync\")\n\n\tlocal success = MockDataStoreManager.YieldForBudget(\n\t\tfunction()\n\t\t\twarn(\"AdvanceToNextPageAsync request was throttled due to lack of budget. Try sending fewer requests.\")\n\t\tend,\n\t\t{Enum.DataStoreRequestType.GetAsync}\n\t)\n\n\tif not success then\n\t\terror(\"AdvanceToNextPageAsync rejected with error (request was throttled, but throttled queue was full)\", 2)\n\tend\n\n\tUtils.simulateYield()\n\n\tif #self.__results > self.__currentPage * self.__pageSize then\n\t\tself.__currentPage = self.__currentPage + 1\n\tend\n\tself.IsFinished = #self.__results <= self.__currentPage * self.__pageSize\n\n\tUtils.logMethod(self.__datastore, \"AdvanceToNextPageAsync\")\n\nend\n\nreturn MockDataStorePages\n",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: MockDataStorePages)>"
}