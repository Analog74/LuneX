{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: ModuleScript, instance: Signal)>",
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: ModuleScript, instance: Signal)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: ModuleScript, instance: Signal)>",
  "Sandboxed": false,
  "ScriptGuid": "{F25B033B-5991-4834-BAC1-DF1DED1809FF}",
  "Source": "local freeRunnerThread\n\nlocal function acquireRunnerThreadAndCallEventHandler(func, ...)\n    local acquiredRunnerThread = freeRunnerThread\n\tfreeRunnerThread = nil\n\tfunc(...)\n\tfreeRunnerThread = acquiredRunnerThread\nend\n\n-- Connection class\n\nlocal Connection = {}\nConnection.__index = Connection\n\nfunction Connection.new(signal, fn)\n\treturn setmetatable({\n\t\t_connected = true,\n\t\t_signal = signal,\n\t\t_fn = fn,\n\t\t_next = false,\n\t}, Connection)\nend\n\nfunction Connection:Disconnect()\n\tassert(self._connected, \"Connection already disconnected.\")\n\tself._connected = false\n\n\tif self._signal._handlerListHead == self then\n\t\tself._signal._handlerListHead = self._next\n\telse\n\t\tlocal prev = self._signal._handlerListHead\n\t\twhile prev and prev._next ~= self do\n\t\t\tprev = prev._next\n\t\tend\n\t\tif prev then\n\t\t\tprev._next = self._next\n\t\tend\n\tend\nend\n\n-- Signal class\n\nlocal Signal = {}\nSignal.__index = Signal\n\nfunction Signal.new()\n\treturn setmetatable({_handlerListHead = false}, Signal)\nend\n\nfunction Signal:Connect(fn)\n\tlocal connection = Connection.new(self, fn)\n\tconnection._next = (self._handlerListHead and self._handlerListHead) or connection._next\n\tself._handlerListHead = connection\n\treturn connection\nend\n\nfunction Signal:Fire(...)\n\tlocal item = self._handlerListHead\n\twhile item do\n\t\tif item._connected then\n\t\t\tif not freeRunnerThread then\n\t\t\t\tfreeRunnerThread = coroutine.create(function(...)\n\t\t\t\t\tacquireRunnerThreadAndCallEventHandler(...)\n\t\t\t\t\twhile true do\n\t\t\t\t\t\tacquireRunnerThreadAndCallEventHandler(coroutine.yield())\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\t\tend\n\t\t\ttask.spawn(freeRunnerThread, item._fn, ...)\n\t\tend\n\t\titem = item._next\n\tend\nend\n\nfunction Signal:Wait()\n\tlocal waitingcoroutine = coroutine.running()\n\tlocal connect;\n\tconnect = self:Connect(function(...)\n\t\tconnect:Disconnect()\n\t\ttask.spawn(waitingcoroutine, ...)\n\tend)\n\treturn coroutine.yield()\nend\n\nreturn Signal",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: ModuleScript, instance: Signal)>"
}