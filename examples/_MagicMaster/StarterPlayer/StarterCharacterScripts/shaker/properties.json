{
  "Attributes": {},
  "Capabilities": "<FAILED: Unsupported variant type: Discriminant(37) (property: Capabilities, class: LocalScript, instance: shaker)>",
  "Disabled": true,
  "HistoryId": "<FAILED: Unsupported variant type: Discriminant(35) (property: HistoryId, class: LocalScript, instance: shaker)>",
  "LinkedSource": "<FAILED: Unsupported variant type: Discriminant(8) (property: LinkedSource, class: LocalScript, instance: shaker)>",
  "RunContext": "Enum { value: 0 }",
  "Sandboxed": false,
  "ScriptGuid": "{FEF3D61D-AE30-47A2-BAB8-D1DD776B5B06}",
  "Source": "local camera = workspace.CurrentCamera\n\nlocal vr = script.e\nlocal CameraShaker = require(game.ReplicatedStorage.CameraShaker)\nlocal function ShakeCamera(shakeCf)\n\tcamera.CFrame = camera.CFrame * shakeCf\nend\nlocal renderPriority = Enum.RenderPriority.Camera.Value + 1\nlocal camShake = CameraShaker.new(renderPriority, ShakeCamera)\ncamShake:Start()\nwhile (true) do\n\tlocal ef = math.random(1,3)\n\tvr.Value=ef\n\tif vr.Value == 1 then\n\tcamShake:Shake(CameraShaker.Presets.Earthquake)\n\tend\n\tif vr.Value == 2 then\n\t\tcamShake:Shake(CameraShaker.Presets.Explosion)\n\tend\n\tif vr.Value == 3 then\n\t\tcamShake:Shake(CameraShaker.Presets.Vibration)\n\tend\n\tif vr.Value == 4 then\n\t\tcamShake:Shake(CameraShaker.Presets.Bump)\n\tend\n\tif vr.Value == 5 then\n\t\tcamShake:Shake(CameraShaker.Presets.HandheldCamera)\n\tend\n\t\twait(1)\n\t\n\tend ",
  "SourceAssetId": -1,
  "Tags": [],
  "UniqueId": "<FAILED: Unsupported variant type: Discriminant(35) (property: UniqueId, class: LocalScript, instance: shaker)>"
}