{
  "Attributes": "<unsupported: Attributes(Attributes { data: {} })>",
  "Capabilities": "<unsupported: SecurityCapabilities(SecurityCapabilities { value: 0 })>",
  "HistoryId": "<unsupported: UniqueId(UniqueId { index: 0, time: 0, random: 0 })>",
  "LinkedSource": "<unsupported: ContentId(ContentId { url: \"\" })>",
  "Sandboxed": false,
  "ScriptGuid": "{C96C0077-5963-4C35-B0D0-CFE409CB38AD}",
  "Source": "--Properties do not update in realtime here\n--i.e. You can't change explosion properties at any time beyond the initial function execution\nlocal LightningBolt = require(script.Parent)\nlocal LightningSparks = require(script.Parent.LightningSparks)\n\nlocal rng_v = Random.new()\nlocal clock = os.clock\n\nfunction RandomVectorOffsetBetween(v, minAngle, maxAngle) --returns uniformly-distributed random unit vector no more than maxAngle radians away from v and no less than minAngle radians\n    return (CFrame.lookAt(Vector3.new(), v)*CFrame.Angles(0, 0, rng_v:NextNumber(0, 2*math.pi))*CFrame.Angles(math.acos(rng_v:NextNumber(math.cos(maxAngle), math.cos(minAngle))), 0, 0)).LookVector\nend\n\n\nlocal ActiveExplosions = {}\n\n\nlocal LightningExplosion = {}\nLightningExplosion.__index = LightningExplosion\n\nfunction LightningExplosion.new(Position, Size, NumBolts, Color, BoltColor, UpVector)\n\tlocal self = setmetatable({}, LightningExplosion)\n\t\n\t--Main (default) Properties--\n\t\n\t\tself.Size = Size or 1 --Value between 0 and 1 (1 for largest)\n\t\tself.NumBolts = NumBolts or 14 --Number of lightning bolts shot out from explosion\n\t\tself.Color = Color or ColorSequence.new(Color3.new(1, 0, 0), Color3.new(0, 0, 1)) --Can be a Color3 or ColorSequence\n\t\tself.BoltColor = BoltColor or Color3.new(0.3, 0.3, 1) --Can be a Color3 or ColorSequence\n\t\tself.UpVector = UpVector or Vector3.new(0, 1, 0) --Can be used to \"rotate\" the explosion\n\t\n\t--\n\t\n\tlocal parent = workspace.CurrentCamera\n\t\n\tlocal part = Instance.new(\"Part\")\n\tpart.Name = \"LightningExplosion\"\n\tpart.Anchored = true\n\tpart.CanCollide = false\n\tpart.Locked = true\n\tpart.CastShadow = false\n\tpart.Transparency = 1\n\tpart.Size = Vector3.new(0.05, 0.05, 0.05)\n\tpart.CFrame = CFrame.lookAt(Position + Vector3.new(0, 0.5, 0), Position + Vector3.new(0, 0.5, 0) + self.UpVector)*CFrame.lookAt(Vector3.new(), Vector3.new(0, 1, 0)):inverse()\n\tpart.Parent = parent\n\t\n\tlocal attach = Instance.new(\"Attachment\")\n\tattach.Parent = part\n\tattach.CFrame = CFrame.new()\n\t\n\tlocal partEmit1 = script.ExplosionBrightspot:Clone()\n\tlocal partEmit2 = script.GlareEmitter:Clone()\n\tlocal partEmit3 = script.PlasmaEmitter:Clone()\n\t\n\tlocal size = math.clamp(self.Size, 0, 1)\n\t\n\tpartEmit2.Size = NumberSequence.new(30*size)\n\tpartEmit3.Size = NumberSequence.new(18*size)\n\tpartEmit3.Speed = NumberRange.new(100*size)\n\t\n\tpartEmit1.Parent = attach\n\tpartEmit2.Parent = attach\n\tpartEmit3.Parent = attach\n\t\n\tlocal color = self.Color\n\t\n\tif typeof(color) == \"Color3\" then\n\t\tpartEmit2.Color, partEmit3.Color = ColorSequence.new(color), ColorSequence.new(color)\n\t\tlocal cH, cS, cV = Color3.toHSV(color)\n\t\tpartEmit1.Color = ColorSequence.new(Color3.fromHSV(cH, 0.5, cV))\n\telse --ColorSequence\n\t\tpartEmit2.Color, partEmit3.Color = color, color\n\t\tlocal keypoints = color.Keypoints \n\t\tfor i = 1, #keypoints do\n\t\t\tlocal cH, cS, cV = Color3.toHSV(keypoints[i].Value)\n\t\t\tkeypoints[i] = ColorSequenceKeypoint.new(keypoints[i].Time, Color3.fromHSV(cH, 0.5, cV))\n\t\tend\n\t\tpartEmit1.Color = ColorSequence.new(keypoints)\n\tend\n\t\n\tpartEmit1.Enabled, partEmit2.Enabled, partEmit3.Enabled = true, true, true\n\t\n\tlocal bolts = {}\n\t\n\tfor i = 1, self.NumBolts do\n\t\tlocal A1, A2 = {}, {}\n\n\t\tA1.WorldPosition, A1.WorldAxis = attach.WorldPosition, RandomVectorOffsetBetween(self.UpVector, math.rad(65), math.rad(80))\n\t\tA2.WorldPosition, A2.WorldAxis = attach.WorldPosition + A1.WorldAxis*rng_v:NextNumber(20, 40)*1.4*size, RandomVectorOffsetBetween(-self.UpVector, math.rad(70), math.rad(110))\n\t\t--local curve0, curve1 = rng_v:NextNumber(0, 10)*size, rng_v:NextNumber(0, 10)*size\n\t\tlocal NewBolt = LightningBolt.new(A1, A2, 10)\n\t\tNewBolt.AnimationSpeed = 0\n\t\tNewBolt.Thickness = 1 --*size\n\t\tNewBolt.Color = self.BoltColor\n\t\tNewBolt.PulseLength = 0.8\n\t\tNewBolt.ColorOffsetSpeed = 20\n\t\tNewBolt.Frequency = 2\n\t\tNewBolt.MinRadius, NewBolt.MaxRadius = 0, 4*size\n\t\tNewBolt.FadeLength = 0.4\n\t\tNewBolt.PulseSpeed = 5\n\t\tNewBolt.MinThicknessMultiplier, NewBolt.MaxThicknessMultiplier = 0.7, 1\n\n\t\tlocal NewSparks = LightningSparks.new(NewBolt, 5)\n\t\tNewSparks.MinDistance, NewSparks.MaxDistance = 7.5, 10\n\t\t\n\t\tNewBolt.Velocity = (A2.WorldPosition - A1.WorldPosition).Unit*0.1*size\n\t\t--NewBolt.v0, NewBolt.v1 = rng_v:NextNumber(0, 5)*size, rng_v:NextNumber(0, 5)*size\n\t\t\n\t\tbolts[#bolts + 1] = NewBolt\n\tend\n\t\n\tself.Bolts = bolts\n\tself.Attachment = attach\n\tself.Part = part\n\tself.StartT = clock()\n\tself.RefIndex = #ActiveExplosions + 1\n\n\tActiveExplosions[self.RefIndex] = self\n\n\treturn self\nend\n\nfunction LightningExplosion:Destroy()\n\tActiveExplosions[self.RefIndex] = nil\n\tself.Part:Destroy()\n\t\n\tfor i = 1, #self.Bolts do\n\t\tself.Bolts[i] = nil\n\tend\n\t\n\tself = nil\nend\n\ngame:GetService(\"RunService\").Heartbeat:Connect(function ()\n\t\n\tfor _, ThisExplosion in pairs(ActiveExplosions) do\n\t\t\n\t\tlocal timePassed = clock() - ThisExplosion.StartT\n\t\tlocal attach = ThisExplosion.Attachment\n\t\t\n\t\tif timePassed < 0.7 then \n\t\t\t\n\t\t\tif timePassed > 0.2 then\n\t\t\t\tattach.ExplosionBrightspot.Enabled, attach.GlareEmitter.Enabled, attach.PlasmaEmitter.Enabled = false, false, false\n\t\t\tend\n\t\t\t\n\t\t\tfor i = 1, #ThisExplosion.Bolts do \n\t\t\t\t\n\t\t\t\tlocal currBolt = ThisExplosion.Bolts[i]\n\t\t\t\tcurrBolt.Attachment1.WorldPosition = currBolt.Attachment1.WorldPosition + currBolt.Velocity\n\t\t\t\t--currBolt.CurveSize0, currBolt.CurveSize1 = currBolt.CurveSize0 + currBolt.v0, currBolt.CurveSize1 + currBolt.v1\n\t\t\t\t\n\t\t\tend\n\t\t\t\n\t\telse\n\t\t\t\n\t\t\tThisExplosion:Destroy()\n\t\t\t\n\t\tend\n\t\t\n\tend\n\t\nend)\n\n\n\n\nreturn LightningExplosion",
  "SourceAssetId": "<unsupported: Int64(-1)>",
  "Tags": "<unsupported: Tags(Tags { members: [] })>",
  "UniqueId": "<unsupported: UniqueId(UniqueId { index: 11934949, time: 32320501, random: 7308681896716043950 })>"
}