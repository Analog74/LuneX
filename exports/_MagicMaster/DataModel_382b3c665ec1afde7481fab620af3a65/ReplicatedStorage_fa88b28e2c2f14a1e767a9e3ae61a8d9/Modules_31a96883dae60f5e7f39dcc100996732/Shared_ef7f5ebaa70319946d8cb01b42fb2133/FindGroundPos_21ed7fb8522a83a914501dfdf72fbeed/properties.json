{
  "Attributes": "<unsupported: Attributes(Attributes { data: {} })>",
  "Capabilities": "<unsupported: SecurityCapabilities(SecurityCapabilities { value: 0 })>",
  "HistoryId": "<unsupported: UniqueId(UniqueId { index: 0, time: 0, random: 0 })>",
  "LinkedSource": "<unsupported: ContentId(ContentId { url: \"\" })>",
  "Sandboxed": false,
  "ScriptGuid": "{128d53d1-9776-40fc-a5b7-fa2c1b3eabdd}",
  "Source": "return function(Part, IgnoreList)\n\t-- We use this for handling raycast parameters and ignore lists.\n\tlocal RaycastParameters = RaycastParams.new()\n\tRaycastParameters.FilterDescendantsInstances = IgnoreList or { Part, workspace.Effects }\n\tRaycastParameters.FilterType = Enum.RaycastFilterType.Blacklist\n\tlocal Hit = workspace:Raycast(Part.Position, Part.CFrame.UpVector * -10, RaycastParameters)\n\treturn Hit.Position\nend",
  "SourceAssetId": "<unsupported: Int64(-1)>",
  "Tags": "<unsupported: Tags(Tags { members: [] })>",
  "UniqueId": "<unsupported: UniqueId(UniqueId { index: 24799, time: 142155861, random: 1232354692393223026 })>"
}